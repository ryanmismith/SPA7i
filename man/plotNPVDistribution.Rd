% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_npv_dist.R
\name{plotNPVDistribution}
\alias{plotNPVDistribution}
\title{Plot NPV Distribution with Professional Styling}
\usage{
plotNPVDistribution(
  npv_results,
  plot_title = NULL,
  caption = TRUE,
  legend = FALSE,
  binwidth = NULL,
  base_size = 14
)
}
\arguments{
\item{npv_results}{A dataframe containing NPV simulation results, which must include a column `NPV` for the net present value and a `CI_80` column for the 80 percent confidence intervals.}

\item{plot_title}{A string specifying the title of the plot. Defaults to NULL.}

\item{caption}{A logical value indicating whether to include the Mean NPV and 80 percent CIs in the caption. Defaults to TRUE.}

\item{legend}{A logical value indicating whether to include a legend for the lines representing the mean NPV and 80 percent CIs. Defaults to FALSE.}

\item{binwidth}{You may manually adjust the histogram's binwidth, but it defaults a function that is the product of the max NPV value. Defaults to NULL.}

\item{base_size}{You may change the base_size of the figure axis text if formatting appears irregular. Defaults to 14.}
}
\value{
A ggplot object representing the NPV distribution plot.
}
\description{
This function takes the output of the `monteCarloAnalysis` function and creates a professional-quality plot of the NPV distribution,
suitable for publication. The plot includes the mean NPV, optional 80 percent confidence intervals, and a customizable title.
The plot also allows an optional caption to display the Mean NPV and 80 percent Confidence Interval (CI) lower and upper bound values.
There is also an optional legend.
}
\examples{
# Mock sample list for npv_results
# Generate NPV data
 npv_values <- rnorm(500, mean = 110440, sd = 22300)  # Random NPV values with normal distribution

 # Create the list with NPV and confidence intervals
 npv_results <- list(
 NPV = npv_values,  # Random NPV values
 CI_80 = quantile(npv_values, c(0.10, 0.90))  # 80\% confidence intervals at 10th and 90th percentiles
)

# Generate the NPV plot using the plotNPVDistribution function (no title)
npv_plot <- plotNPVDistribution(npv_results, caption = TRUE, legend = TRUE)

# Print the generated plot
print(npv_plot)

# Example 2: Generate the NPV plot using the plotNPVDistribution function (no caption or legend)
npv_plot2 <- plotNPVDistribution(npv_results, "Simulated Parcel Value", caption = FALSE)
print(npv_plot2)

}
\seealso{
\code{\link{monteCarloAnalysis}}
}
\concept{Reporting Functions}
